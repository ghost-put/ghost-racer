<?xml version="1.0"?>

<robot name="major" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Degree-to-radian conversions -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>
  <!--
   chassis_length is measured along the x axis, chassis_width
         along the y axis, and chassis_height along the z axis.
  -->
  <xacro:property name="top_chassis_length" value=".50"/>
  <xacro:property name="top_chassis_width" value=".3"/>
  <xacro:property name="top_chassis_height" value=".004"/>
  <xacro:property name="top_chassis_mass" value="0.500"/>
  <xacro:property name="top_chassis_d_from_ground" value="0.14"/>

  <xacro:property name="chassis_length" value=".32"/>
  <xacro:property name="chassis_width" value=".14"/>
  <xacro:property name="chassis_height" value=".025"/>
  <xacro:property name="chassis_mass" value="0.388"/>
  <xacro:property name="chassis_d_from_ground" value="0.05"/>

  <xacro:property name="hub_dia" value="0.08"/>
  <xacro:property name="tire_dia" value="0.02"/>
  <xacro:property name="tire_width" value="0.045"/>
  <xacro:property name="wheel_mass" value="0.29"/>
  <xacro:property name="wheel_color" value="Gazebo/Orange"/>

  <!-- The specifications for a Titan(R) 550 motor could not be found, so the
     stall torque of a Mabuchi Motor(R) RS-550VC-7525 motor was used instead.
     num_spur_gear_teeth = 68
     num_pinion_gear_teeth = 19
     final_gear_ratio = (num_spur_gear_teeth / num_pinion_gear_teeth) *
       5.22 = 18.68
     stall_torque = 0.549 N m
     axle_eff_limit = ((2 * stall_torque) * final_gear_ratio) / 4 =
       5.12766 N m

     max_speed = 40 mph (30+ mph) = 17.8816 m/s
     axle_vel_limit = (2 * pi) * (max_speed / (pi * tire_dia)) =
       244.8696 rad/s -->
  <xacro:property name="axle_eff_limit" value="5.12766"/>
  <xacro:property name="axle_vel_limit" value="244.8696"/>
  <!-- These constants are used to simulate a Traxxas 2056 servo operated at
       6 V. servo_stall_torque is measured in N m. servo_no_load_speed is
       measured in rad/s. -->
  <xacro:property name="servo_stall_torque" value="0.5649"/>
  <xacro:property name="servo_no_load_speed" value="4.553"/>
  <!-- ctrl_period is gazebo_ros_control's control period. Unit: hertz. -->
  <xacro:property name="ctrl_period" value="0.01"/>

  <!-- Material -->
  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="tire_mat">
    <color rgba="0 0 0 1"/>
  </material>
  <!--
   Null inertial element. This is needed to make the model work with
         Gazebo.
  -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>
  <!--
   Inertia of a solid cuboid. Width is measured along the x axis, depth
         along the y axis, and height along the z axis.
  -->
  <xacro:macro name="solid_cuboid_inertial" params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}" ixy="0" ixz="0" iyy="${mass * (width * width + height * height) / 12}" iyz="0" izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>
  <!--
    Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively.
     -->
  <xacro:macro name="thick_walled_tube_inertial" params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad + outer_rad * outer_rad) + height * height)}" ixy="0" ixz="0" iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad + outer_rad * outer_rad) + height * height)}" iyz="0" izz="${mass * (inner_rad * inner_rad + outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>

  <!-- base_link must have geometry so that its axes can be displayed in
     rviz. -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!--  Chassis  -->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 ${chassis_d_from_ground}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
    <collision>
      <origin xyz="0 0 ${chassis_d_from_ground}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial width="${chassis_length}" depth="${chassis_width}" height="${chassis_height}" mass="${chassis_mass}">
    <origin xyz="0 0 ${chassis_d_from_ground}"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="base_link_to_chasis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>

  <!--  Top Chassis  -->
  <link name="top_chassis">
    <visual>
      <origin xyz="0 0 0.00"/>
      <geometry>
        <box size="${top_chassis_length} ${top_chassis_width} ${top_chassis_height}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.0"/>
      <geometry>
        <box size="${top_chassis_length} ${top_chassis_width} ${top_chassis_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial width="${top_chassis_length}" depth="${top_chassis_width}" height="${chassis_height}" mass="${top_chassis_mass}">
    <origin xyz="0 0 0.0"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <joint name="top_chassis_joint" type="fixed">
    <origin xyz="0 0 ${top_chassis_d_from_ground}" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="top_chassis" />
    <axis xyz="0 1 0" />
  </joint>
  <gazebo reference="top_chassis">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <!--  Bar Chassis  -->
  <link name="bar_chassis">
    <visual>
      <origin xyz="0 0 0.00"/>
      <geometry>
        <box size="0.018 ${top_chassis_width} 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.0"/>
      <geometry>
        <box size="0.018 ${top_chassis_width} 0.01"/>
      </geometry>
    </collision>
    <!--<xacro:solid_cuboid_inertial width="${top_chassis_length}" depth="${top_chassis_width}" height="${chassis_height}" mass="${top_chassis_mass}">
    <origin xyz="0 0 0.0"/>
    </xacro:solid_cuboid_inertial>-->
  </link>
  <joint name="bar_chassis_joint" type="fixed">
    <origin xyz="0.198 0 0.147" rpy="0 0 0"/>
    <!--<origin xyz="0.14 0 0.147" rpy="0 0 0"/>-->
    <parent link="chassis" />
    <child link="bar_chassis" />
    <axis xyz="0 1 0" />
  </joint>
  <gazebo reference="bar_chassis">
    <material>Gazebo/Green</material>
  </gazebo>
  
  <!--  Vertical Chassis  -->
  <!--<link name="vertical_chassis">
    <visual>
      <origin xyz="0 0 0.00"/>
      <geometry>
        <box size="0.018 0.365 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.0"/>
      <geometry>
        <box size="0.018 0.365 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="vertical_chassis_joint" type="fixed">
    <origin xyz="0.259 0 0.1825" rpy="1.57 0 0"/>

    <parent link="chassis" />
    <child link="vertical_chassis" />
    <axis xyz="0 1 0" />
  </joint>
  <gazebo reference="vertical_chassis">
    <material>Gazebo/Red</material>
  </gazebo>
  
  <link name="vertical_top_chassis">
    <visual>
      <origin xyz="0 0 0.00"/>
      <geometry>
        <box size="0.018 0.2 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.0"/>
      <geometry>
        <box size="0.018 0.2 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="vertical_top_chassis_joint" type="fixed">
    <origin xyz="0 0.2825 0" rpy="0 0 0"/>
    <parent link="vertical_chassis" />
    <child link="vertical_top_chassis" />
    <axis xyz="0 1 0" />
  </joint>
  <gazebo reference="vertical_top_chassis">
    <material>Gazebo/Blue</material>
  </gazebo>-->

  <!-- hokuyo -->
  <!-- Add Hokuyo laser scanner -->
  <!--<link name="laser">
    <inertial>
        <origin xyz="0 0 -0.028" rpy="0 0 0" />
      <mass value="0" />
      <inertia ixx="4E-06" ixy="0" ixz="0"
         iyy="4E-06" iyz="0"
         izz="4E-06" />
    </inertial>
    <collision>
      <origin xyz="0 0 -0.028" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 -0.028" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://major_description/meshes/hokuyo.dae"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>
  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="-0.1 0 0.147" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="laser" />
    <axis xyz="0 0 1" />
  </joint>
  <gazebo reference="laser">
    <material>Gazebo/Grey</material>
    <sensor type="ray" name="hokuyo_sensor">
      <pose>0 0 0.0124 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.0943951023931953</min_angle>
            <max_angle>2.0943951023931953</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>/base_link</frameName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>-->
  
  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      	<mesh filename="package://major_description/meshes/camera_elp-usb500w05g-fd100.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="2.18 0 1.57"/>
      <geometry>
      	<mesh filename="package://major_description/meshes/camera_elp-usb500w05g-fd100.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0.295 0 0.535" rpy="0 0.76 0"/>
    <!--<origin xyz="0.2229 0 0.3528" rpy="0 0.6108 0"/>-->
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>
  
  <gazebo reference="camera_link">
		<sensor type="wideanglecamera" name="camera">
			<visualize>true</visualize>
			<update_rate>30.0</update_rate>
			<camera name="tracking_camera">
				<pose>0 0 0 0 0 0</pose>
                <horizontal_fov>2.6</horizontal_fov>
				<distortion>
					<k1>-0.2673</k1>
					<k2>0.0629</k2>
					<k3>-0.0061</k3>
					<p1>0.0012</p1>
					<p2>-9.1477e-04</p2>					
					<center>0.501996094 0.4585875</center>
				</distortion>
				<image>
					<width>160</width>
					<height>120</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.1</near>
					<far>100</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>				  
			</camera>
			<plugin name="tracking_camera_controller" filename="libgazebo_ros_camera.so">
				<visualize>true</visualize>
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>major_tracking_camera</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera_link</frameName>
			</plugin>
		</sensor>
	</gazebo>
  
  <!-- Top Camera -->
  <link name="top_camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      	<mesh filename="package://major_description/meshes/camera_elp-usb500w05g-fd100.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 1.57"/>
      <geometry>
      	<mesh filename="package://major_description/meshes/camera_elp-usb500w05g-fd100.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <joint name="top_camera_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0.288 0 0.75" rpy="0 -0.3 0"/>
    <!--<origin xyz="0.2229 0 0.3528" rpy="0 0.6108 0"/>-->
    <parent link="chassis"/>
    <child link="top_camera_link"/>
  </joint>
  
	<gazebo reference="top_camera_link">
		<sensor type="wideanglecamera" name="top_camera">
			<visualize>true</visualize>
			<update_rate>30.0</update_rate>
			<camera name="top_camera">
				<pose>0 0 0 0 0 0</pose>
                <horizontal_fov>2.6</horizontal_fov>
				<distortion>
					<k1>-0.254536654032040</k1>
					<k2>0.052707476272924</k2>
					<k3>0.004060325839474</k3>
					<p1>0.001216492819178</p1>
					<p2>0.001034739611621</p2>					
					<center>0.486 0.432</center>
				</distortion>
				<image>
					<width>320</width>
					<height>240</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.1</near>
					<far>100</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>				  
			</camera>
			<plugin name="top_camera_controller" filename="libgazebo_ros_camera.so">
				<visualize>true</visualize>
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>major_top_camera</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>top_camera_info</cameraInfoTopicName>
				<frameName>top_camera_link</frameName>
			</plugin>
		</sensor>
	</gazebo>
  <!-- Camera -->
  <!--<link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      	<box size="0.032 0.075 0.03"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      	<mesh filename="package://major_description/meshes/ZED.dae" />
      </geometry>
    </visual>

    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0.14 0 0.4" rpy="0 0.5235 0"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>
  
	<joint name="zed_left_camera_joint" type="fixed">
		<parent link="camera_link"/>
		<child link="zed_left_camera_frame"/>
		<origin xyz="0 0.06 0" rpy="0 0 0" />
	</joint>
	
	<link name="zed_left_camera_frame">
    	<inertial>
    		<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1e-6"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
    </link>
    
    <joint name="zed_left_camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.57079632679 0.0 -1.57079632679"/>
        <parent link="zed_left_camera_frame"/>
        <child link="zed_left_camera_optical_frame"/>
    </joint>
    
    <link name="zed_left_camera_optical_frame">
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1e-6"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
    </link>
    
    <joint name="zed_right_camera_joint" type="fixed">
        <parent link="camera_link"/>
        <child link="zed_right_camera_frame"/>
        <origin xyz="0 -0.06 0" rpy="0 0 0" />
    </joint>
    
    <link name="zed_right_camera_frame">
    	<inertial>
    		<origin xyz="0 0 0" rpy="0 0 0"/>
    		<mass value="1e-6"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>
	
	<joint name="zed_right_camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.57079632679 0.0 -1.57079632679"/>
        <parent link="zed_right_camera_frame"/>
        <child link="zed_right_camera_optical_frame"/>
    </joint>
    
    <link name="zed_right_camera_optical_frame">
    	<inertial>
    		<origin xyz="0 0 0" rpy="0 0 0"/>
    		<mass value="1e-6"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
    </link>-->
    
    <!--<gazebo reference="camera_link">
		<sensor type="multicamera" name="stereo_camera">
			<visualize>true</visualize>
			<update_rate>30.0</update_rate>
			<camera name="left">
				<pose>0 0.06 0 0 0 0</pose>
				<horizontal_fov>1.51843645</horizontal_fov>
				<distortion>
					<k1>-0.171295</k1>
					<k2>0.0237889</k2>
					<k3>0</k3>
					<p1>0</p1>
					<p2>0</p2>
					<center>0.499241071 0.484635638</center>
				</distortion>
				<image>
					<width>672</width>
					<height>376</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<camera name="right">
				<pose>0 -0.06 0 0 0 0</pose>
				<horizontal_fov>1.51843645</horizontal_fov>
				<distortion>
					<k1>-0.171172</k1>
					<k2>0.0237539</k2>
					<k3>0</k3>
					<p1>0</p1>
					<p2>0</p2>
					<center>0.50224256 0.493800532</center>
				</distortion>
				<image>
					<width>672</width>
					<height>376</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
				<visualize>true</visualize>
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>zed/camera</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera_link</frameName>

				<baseline>0.12</baseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>-->
	
  <!--<joint name="camera_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0.228 0 0.13" rpy="0 0.3 0"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>-->
  <!--<gazebo reference="camera_link">
    <sensor type="depth" name="camera1">
        <always_on>1</always_on>
        <visualize>true</visualize>
        <camera>
            <horizontal_fov>1.57</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
        </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>1.0</updateRate>
            <cameraName>camera</cameraName>
            <frameName>camera_link</frameName>
            <leftCamera>l_sensor</leftCamera>
            <rightCamera>r_sensor</rightCamera>
            <imageTopicName>rgb/image_raw</imageTopicName>
            <depthImageTopicName>depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>depth/points</pointCloudTopicName>
            <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
            <pointCloudCutoff>0.4</pointCloudCutoff>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            <CxPrime>0.0</CxPrime>
            <Cx>0.0</Cx>
            <Cy>0.0</Cy>
            <focalLength>0.0</focalLength>
            </plugin>
    </sensor>
  </gazebo>-->

  <!--IMU-->
  <!--<link name="imu_link">
    <xacro:null_inertial/>
  </link>
  <joint name="imu_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 0.1" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="imu_link"/>
  </joint>
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>-->

  <!-- Import Rviz colors -->
  <xacro:include filename="$(find major_description)/urdf/materials.xacro" />

  <!-- LEFT REAR WHEEL -->
  <link name="left_rear_wheel">

    <collision name="collision">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    </collision>

    <visual name="left_rear_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    <material name="black" />
    </visual>

    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia / 2}" outer_rad="${tire_dia / 2}"
          height="${tire_width}" mass="${wheel_mass}"/>

  </link>
  <!--left rear wheel joint-->
  <joint type="continuous" name="left_rear_wheel_joint">
     <origin xyz="-0.16 0.125 0.05" rpy="${degrees_90} 0 0" />
    <parent link="chassis" />
    <child link="left_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="left_rear_wheel">
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="left_rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="rear_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!--RIGHT REAR WHEEL -->
  <link name="right_rear_wheel">
    <collision name="collision">
      <origin xyz="0 0 0.0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    </collision>

    <visual name="right_rear_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    <material name="black" />
    </visual>

    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia / 2}" outer_rad="${tire_dia / 2}"
          height="${tire_width}" mass="${wheel_mass}"/>
  </link>
  <!--right rear wheel joint-->
  <joint type="continuous" name="right_rear_wheel_joint">
     <origin xyz="-0.16 -0.125 0.05" rpy="${degrees_90} 0 0" />
    <parent link="chassis" />
    <child link="right_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="right_rear_wheel">
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="right_rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="rear_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- left front wheel steering link-->
  <link name="left_steering_link">
    <xacro:null_inertial/>
  </link>
  <joint type="revolute" name="left_steering_joint">
    <origin xyz="0.16 0.125 0.05" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="left_steering_link" />
    <axis xyz="0 0 1" />
    <limit lower="${-degrees_45}" upper="${degrees_45}"
           effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="left_steering_link">
    <mu1>0.6</mu1>
    <mu2>0.6</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_steering_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="left_steering_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- right front wheel steering link-->
  <link name="right_steering_link">
    <xacro:null_inertial/>
  </link>
  <joint type="revolute" name="right_steering_joint">
    <origin xyz="0.16 -0.125 0.05" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="right_steering_link" />
    <axis xyz="0 0 1" />
    <limit lower="${-degrees_45}" upper="${degrees_45}"
           effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="right_steering_link">
    <mu1>0.6</mu1>
    <mu2>0.6</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_steering_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="right_steering_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- LEFT FRONT WHEEL -->
  <link name="left_front_wheel">

    <collision name="collision">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    </collision>

    <visual name="left_front_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    <material name="black" />
    </visual>

    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia / 2}" outer_rad="${tire_dia / 2}"
          height="${tire_width}" mass="${wheel_mass}"/>

  </link>
  <!--left front wheel joint-->
  <joint type="continuous" name="left_front_wheel_joint">
    <origin xyz="0 0 0" rpy="${degrees_90} 0 0"/>
    <parent link="left_steering_link" />
    <child link="left_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="left_front_wheel">
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="left_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="left_front_wheel_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- RIGHT FRONT WHEEL -->
  <link name="right_front_wheel">
    <collision name="collision">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    </collision>

    <visual name="right_front_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${tire_width}" radius="${(hub_dia + tire_dia)/2}" />
      </geometry>
    <material name="black" />
    </visual>

    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia / 2}" outer_rad="${tire_dia / 2}"
          height="${tire_width}" mass="${wheel_mass}"/>
  </link>
  <!--right front wheel joint-->
  <joint type="continuous" name="right_front_wheel_joint">
    <origin xyz="0 0 0" rpy="${degrees_90} 0 0"/>
    <parent link="right_steering_link" />
    <child link="right_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>
  <!-- Material -->
  <gazebo reference="right_front_wheel">
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <material>${wheel_color}</material>
  </gazebo>
  <!--Transmission-->
  <transmission name="right_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </joint>
    <actuator name="right_front_wheel_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <gazebo>
    <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
      <frameName>map</frameName>
      <bodyName>base_link</bodyName>
      <tfName>/base_link</tfName>
      <topicName>odom_ground_truth</topicName>
      <updateRate>50.0</updateRate>
    </plugin>
  </gazebo>
  <!-- ros_control plugin -->
  <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>/</robotNamespace>
          <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
          <legacyModeNS>True</legacyModeNS>legacyModeNS>
      </plugin>
  </gazebo>

</robot>
